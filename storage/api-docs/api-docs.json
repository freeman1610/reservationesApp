{
    "openapi": "3.0.0",
    "info": {
        "title": "Reservations API - Documentation",
        "description": "Detailed API description for the space reservation system, by José González.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "avatar": {
                                        "description": "Avatar image file.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario registrado exitosamente."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "Bearer 1|abc..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inicio de sesión exitoso."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "Bearer 2|abc..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Credenciales inválidas."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the current user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sesión cerrada exitosamente."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get the authenticated user's profile",
                "operationId": "ede45b19680d6fb1319013a741a05734",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update the authenticated user's profile",
                "operationId": "56162de6c8a3b48291aee6cf5d6ee14a",
                "requestBody": {
                    "description": "User data to update. Use multipart/form-data to upload an avatar. Note: _method parameter is not needed.",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "avatar": {
                                        "description": "Image file for the avatar.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "remove_avatar": {
                                        "description": "Set to true to remove current avatar.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Perfil actualizado exitosamente."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reports/reservations-by-space": {
            "get": {
                "tags": [
                    "Reports (Admin)"
                ],
                "summary": "Get reservation report by space",
                "operationId": "649c4e29c74ea9601c0ab00feba55c05",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "e.g. 2025-01-01",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "e.g. 2025-12-31",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "space_id",
                        "in": "query",
                        "description": "Optional Space ID to filter",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation report data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationReportResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reports/active-users": {
            "get": {
                "tags": [
                    "Reports (Admin)"
                ],
                "summary": "Get a report of active users (most reservations)",
                "operationId": "87b081102d9a8ed734ac0774704c98e4",
                "responses": {
                    "200": {
                        "description": "List of active users sorted by reservation count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActiveUserReportResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "List user's reservations",
                "operationId": "fbc6050d9f7fdb07075d3aaeb157ffa9",
                "responses": {
                    "200": {
                        "description": "A list of reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a new reservation",
                "operationId": "01e3d21dc330a31de025203bc142ffa3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "space_id",
                                    "reservation_date",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "space_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "reservation_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-01"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "11:00"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "example": "Important client meeting"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get a specific reservation",
                "operationId": "a226b43b2a6a846245e658d01bf00720",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update a reservation",
                "operationId": "02fa683a9f80a0563596fb06685bcbc7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "space_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "reservation_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-02"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "example": "Updated purpose"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Cancel a reservation",
                "operationId": "9b6641e4ded1ff7adfce352d589b85e9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reservación cancelada correctamente."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/spaces": {
            "get": {
                "tags": [
                    "Spaces (Admin)"
                ],
                "summary": "List and filter available spaces",
                "operationId": "e17708e9e7050fff0a684603393f619b",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by space type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "room",
                                "desk",
                                "hall"
                            ]
                        }
                    },
                    {
                        "name": "capacity",
                        "in": "query",
                        "description": "Filter by minimum capacity",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter by availability date (e.g., 2025-08-01)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "Filter by start time (e.g., 09:00)",
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "Filter by end time (e.g., 10:00)",
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of spaces",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpaceResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Spaces (Admin)"
                ],
                "summary": "Create a new space",
                "operationId": "8bbbe73fe6d28fc7aadf84f49791569b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "description",
                                    "capacity",
                                    "location"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Coworking Desk"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "room",
                                            "desk",
                                            "hall"
                                        ],
                                        "example": "desk"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A quiet desk near the window."
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Floor 3"
                                    },
                                    "availability": {
                                        "description": "Object with days of the week as keys. Each day has an array of time slots.",
                                        "type": "object",
                                        "example": {
                                            "monday": [
                                                {
                                                    "start": "09:00",
                                                    "end": "18:00"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Space created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpaceResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/spaces/{id}": {
            "get": {
                "tags": [
                    "Spaces (Admin)"
                ],
                "summary": "Get a specific space",
                "operationId": "42a320419e7c2f110e1cf34132f9e26a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpaceResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Spaces (Admin)"
                ],
                "summary": "Update a space",
                "operationId": "ad0300609c73b94572ef9b932a2fc6db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Room Name"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 12
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Space updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpaceResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Spaces (Admin)"
                ],
                "summary": "Delete a space",
                "operationId": "5a5eda39c31c16b6218dc227d58898a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Espacio eliminado exitosamente."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "List all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "user"
                                    },
                                    "avatar": {
                                        "description": "Avatar image file.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "max_simultaneous_reservations": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario creado exitosamente."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Get a specific user",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Update a user",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane.doe.updated@example.com"
                                    },
                                    "password": {
                                        "description": "Optional. Min 8 characters.",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "admin"
                                    },
                                    "max_simultaneous_reservations": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario actualizado exitosamente."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Delete a user",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario eliminado exitosamente."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ValidationError": {
                "title": "Validation Error",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource model",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@example.com"
                            },
                            "role": {
                                "type": "string",
                                "example": "user"
                            },
                            "avatar_url": {
                                "type": "string",
                                "example": "/storage/avatars/default_avatar.png"
                            },
                            "max_simultaneous_reservations": {
                                "type": "integer",
                                "example": 5
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "is_admin": {
                                "type": "boolean",
                                "example": false
                            },
                            "is_user": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ReservationReportResource": {
                "title": "Reservation Report Resource",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "space_name": {
                                "type": "string",
                                "example": "Sala de Juntas A"
                            },
                            "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2025-08-01"
                            },
                            "reservation_count": {
                                "type": "integer",
                                "example": 5
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ActiveUserReportResource": {
                "title": "Active User Report Resource",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Usuario Admin"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "admin@example.com"
                            },
                            "role": {
                                "type": "string",
                                "example": "admin"
                            },
                            "reservations_count": {
                                "type": "integer",
                                "example": 12
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ReservationResource": {
                "title": "Reservation Resource",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "purpose": {
                                "type": "string",
                                "example": "Team meeting"
                            },
                            "status": {
                                "type": "string",
                                "example": "confirmed"
                            },
                            "start_time": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-01 10:00:00"
                            },
                            "end_time": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-01 11:00:00"
                            },
                            "user": {
                                "$ref": "#/components/schemas/UserResource"
                            },
                            "space": {
                                "$ref": "#/components/schemas/SpaceResource"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SpaceResource": {
                "title": "Space Resource",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "attributes": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Meeting Room A"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Main meeting room with projector."
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "room",
                                            "desk",
                                            "hall"
                                        ],
                                        "example": "room"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Floor 2, North Wing"
                                    },
                                    "availability": {
                                        "type": "object",
                                        "example": {
                                            "monday": [
                                                {
                                                    "start": "09:00",
                                                    "end": "18:00"
                                                }
                                            ]
                                        }
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "Reports (Admin)",
            "description": "Reports (Admin)"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        },
        {
            "name": "Spaces (Admin)",
            "description": "Spaces (Admin)"
        },
        {
            "name": "Users (Admin)",
            "description": "Users (Admin)"
        }
    ]
}